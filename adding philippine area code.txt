To add an automatic Philippine area code to a phone number input using PHP, you can create a form that displays the area code based on the country selected, and then have the input field for the phone number. Here's a step-by-step guide:

1. **HTML Form**:
Create an HTML form that includes a dropdown for selecting the country (in this case, Philippines) and an input field for the phone number.

```html
<!DOCTYPE html>
<html>
<head>
    <title>Phone Number with Philippine Area Code</title>
</head>
<body>
    <form action="process.php" method="POST">
        <label for="country">Country:</label>
        <select id="country" name="country">
            <option value="PH">Philippines</option>
            <!-- Other country options if needed -->
        </select><br><br>
        
        <label for="phone">Phone Number:</label>
        <input type="text" id="phone" name="phone" required>
        <button type="submit">Submit</button>
    </form>
</body>
</html>
```

2. **PHP Processing**:
In your PHP processing script (`process.php`), you can check the selected country and add the appropriate area code based on the selected country.

```php
<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $country = $_POST["country"];
    $phone = $_POST["phone"];

    $country_codes = [
        "PH" => "+63" // Philippines area code
        // Add more country codes as needed
    ];

    $phone_with_code = isset($country_codes[$country]) ? $country_codes[$country] . $phone : $phone;

    echo "Phone number with area code: " . $phone_with_code;
}
?>
```

In this example, the PHP script checks the selected country and adds the Philippine area code (`+63`) to the entered phone number if the country is Philippines.

Please note that this example is simplified for demonstration purposes. In a real-world scenario, you would want to handle validation, sanitize user input, and potentially improve the user interface with better design and user experience.

Also, remember that automatically adding area codes might not be foolproof due to various considerations, such as mobile and landline numbers having different area codes, special numbers, and more. Always verify your solution with the relevant local regulations and user expectations.